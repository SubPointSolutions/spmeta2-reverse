<?xml version="1.0" encoding="utf-16"?>
<ArrayOfReverseCoverageResult xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xmlns:xsd="http://www.w3.org/2001/XMLSchema">
  <ReverseCoverageResult>
    <Model xsi:type="MasterPageDefinition">
      <PropertyBag />
      <DefaultValues />
      <Values />
      <Title>1b59f00a267141ab8e2e998d74027861</Title>
      <FileName>f300caabef8a42f5b96aa20de87aae73.master</FileName>
      <NeedOverride>true</NeedOverride>
      <Description>b976c7085bcb4c59b50b01cc4e0ac82f</Description>
      <Content></Content>
      <DefaultCSSFile>0065697db94c424fb8fdda5912d7f6a7.css</DefaultCSSFile>
      <UIVersion>
        <string>15</string>
      </UIVersion>
    </Model>
    <ModelFullClassName>SPMeta2.Definitions.MasterPageDefinition</ModelFullClassName>
    <ModelShortClassName>MasterPageDefinition</ModelShortClassName>
    <Properties>
      <ReverseCoveragePropertyResult>
        <SrcPropertyValue>f300caabef8a42f5b96aa20de87aae73.master</SrcPropertyValue>
        <SrcPropertyName>FileName</SrcPropertyName>
        <DstPropertyValue>f300caabef8a42f5b96aa20de87aae73.master</DstPropertyValue>
        <DstPropertyName>FileName</DstPropertyName>
        <IsValid>true</IsValid>
      </ReverseCoveragePropertyResult>
      <ReverseCoveragePropertyResult>
        <SrcPropertyValue>1b59f00a267141ab8e2e998d74027861</SrcPropertyValue>
        <SrcPropertyName>Title</SrcPropertyName>
        <DstPropertyValue>1b59f00a267141ab8e2e998d74027861</DstPropertyValue>
        <DstPropertyName>Title</DstPropertyName>
        <IsValid>true</IsValid>
      </ReverseCoveragePropertyResult>
      <ReverseCoveragePropertyResult>
        <SrcPropertyValue>b976c7085bcb4c59b50b01cc4e0ac82f</SrcPropertyValue>
        <SrcPropertyName>Description</SrcPropertyName>
        <IsValid>true</IsValid>
        <Message>Not implemented yet</Message>
      </ReverseCoveragePropertyResult>
      <ReverseCoveragePropertyResult>
        <SrcPropertyValue>0065697db94c424fb8fdda5912d7f6a7.css</SrcPropertyValue>
        <SrcPropertyName>DefaultCSSFile</SrcPropertyName>
        <IsValid>true</IsValid>
        <Message>Not implemented yet</Message>
      </ReverseCoveragePropertyResult>
      <ReverseCoveragePropertyResult>
        <SrcPropertyValue>System.Collections.Generic.List`1[System.String]</SrcPropertyValue>
        <SrcPropertyName>UIVersion</SrcPropertyName>
        <IsValid>true</IsValid>
        <Message>Not implemented yet</Message>
      </ReverseCoveragePropertyResult>
      <ReverseCoveragePropertyResult>
        <SrcPropertyValue />
        <SrcPropertyName>ContentTypeId</SrcPropertyName>
        <IsValid>true</IsValid>
        <Message>Not implemented yet</Message>
      </ReverseCoveragePropertyResult>
      <ReverseCoveragePropertyResult>
        <SrcPropertyValue />
        <SrcPropertyName>ContentTypeName</SrcPropertyName>
        <IsValid>true</IsValid>
        <Message>Not implemented yet</Message>
      </ReverseCoveragePropertyResult>
      <ReverseCoveragePropertyResult>
        <SrcPropertyValue>System.Collections.Generic.List`1[SPMeta2.Definitions.FieldValue]</SrcPropertyValue>
        <SrcPropertyName>Values</SrcPropertyName>
        <IsValid>true</IsValid>
        <Message>Not implemented yet</Message>
      </ReverseCoveragePropertyResult>
      <ReverseCoveragePropertyResult>
        <SrcPropertyValue>System.Collections.Generic.List`1[SPMeta2.Definitions.FieldValue]</SrcPropertyValue>
        <SrcPropertyName>DefaultValues</SrcPropertyName>
        <IsValid>true</IsValid>
        <Message>Not implemented yet</Message>
      </ReverseCoveragePropertyResult>
    </Properties>
  </ReverseCoverageResult>
</ArrayOfReverseCoverageResult>